[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Introducción a Unix para Bioinformática",
    "section": "",
    "text": "BioCode Academy\n\n\n\n\n\n\nInformación general\n\n📋 Descripción del curso📌 Sobre el curso👤 Instructores📅 Agenda\n\n\n¡Bienvenido al punto de partida de tu viaje bioinformático! 🌟 Este curso te introduce al poderoso mundo de Unix, la columna vertebral de casi todas las herramientas bioinformáticas modernas.\n🔍 ¿Qué aprenderás?\n\n📁 Navegación eficiente por el sistema de archivos\n⌨️ Dominio de comandos esenciales para el análisis de datos\n📝 Creación de scripts para automatizar tareas repetitivas\n🧩 Manipulación de archivos de secuencias biológicas\n🔄 Pipelines básicos de procesamiento de datos\n\n\n\n\n⌛ Duración: 8 horas (2 horas diarias)\n💬 Idioma: Español\n📍 Ubicación: Virtual (Teams)\n📝 Modalidad: Práctico (20%) + Teórico (80%)\nRequerimientos:\n\n💻 Laptop\n🌐 Conexión a internet\n🐧 Ambiente Unix/WSL (no obligatorio)\n\n\n\nNO SE REQUIERE CONOCIMIENTO PREVIO EN PROGRAMACIÓN\n\n\n\nDavid Alberto García Estrada\n\nCandidato a Doctor en Biología Integrativa, UGA, Cinvestav.\nCo-fundador de BioCode Academy\nContacto\n\n🔗 Github\n📨 albert_dge@hotmail.com\n📨 david.garcia.e@cinvestav.mx\n📨 biocodeacademy@gmail.com\n\n\n\n\n\n📅 Día 1\nMódulo 1: Introducción & Configuración\nObjetivo: Al finalizar, tendrás un ambiente Unix para posteriores análisis.\nActividades:\n\n🔥 Bienvenida & dinámicas\n\nPresentación del curso\nCódigo de conducta\nRonda exprés de presentaciones\n\n💻 Instalación de software\n\n🐧 WSL (Windows)\n🐳 Docker\n🐳 Imagen docker Unix\n🔗 Git\n💻 VisualStudioCode\n\n🌐 Filosofía Unix & Bash\n\n¿Por qué “Unix” y por qué “shell”?\nPrincipios básicos y ventajas\n\n💻 Datos biológicos\n\nSecuencias biológicas: ADN, ARN y proteínas\n\n\n\n\n📅 Día 2\nMódulo 2: Navegación y Gestión de Archivos\nObjetivo: Gestionarás archivos y carpetas, y procesarás texto desde la terminal.\nActividades:\n\n📁 Explora tu sistema de archivos\n\nComandos básicos ls, cd, tree\nAtajos (~, ., .., $PWD)\n\n🗂 Crear y mover archivos\n\ntouch, mkdir, cp, mv, rm\n\n📄 Procesamiento de texto\n\ncat, head, tail, less\nRedireccionamiento (&gt;, &gt;&gt;, |)\nEditor de texto (nano)\n\n🔍 Búsqueda avanzada\n\ngrep, find, wc\n\n\n\n\n📅 Día 3\nMódulo 3: Fundamentos de Scripting Shell\nObjetivo: Automatizarás tareas creando y depurando tus propios scripts.\nActividades:\n\n🚀 Introducción al scripting\n\nShebang (#!/bin/bash)\nPermisos (chmod +x)\n\n🔣 Variables & parámetros\n\nDefinir variables, comillas\nArgumentos posicionales ($1, $@)\n\n🤔 Control de flujo\n\nif…then…else, case\nBucles for, while, until\n\n🐞 Depuración y logging\n\nset -e, set -u, set -x\n\n\n\n\n📅 Día 4\nMódulo 4: Buenas Prácticas & Proyecto Final\nObjetivo: Aplicarás estándares profesionales y entregarás un mini-proyecto.\nActividades:\n\n📏 Estilo y mantenimiento\n\nNomenclatura - Comentarios y funciones modulares\n\n🎯 Inicio de proyecto\n\nDefinición de alcance (e.g. pipeline de texto)\n\n💻 Hackathon guiado\n\nTrabajo en parejas/grupos\nMentoría en vivo\n\n🏆 Demo & retroalimentación\n\nPresentaciones exprés - Feedback colectivo",
    "crumbs": [
      "Información general"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97.",
    "crumbs": [
      "References"
    ]
  }
]